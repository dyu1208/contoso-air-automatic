apiVersion: apps/v1
kind: Deployment
metadata:
  name: contoso-air-deployment
  labels:
    app: contoso-air
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contoso-air
  template:
    metadata:
      labels:
        app: contoso-air
    spec:
      # Security: Use runtime default seccomp profile
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      # Anti-affinity for better resilience - spread pods across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - contoso-air
                topologyKey: kubernetes.io/hostname
      # Topology spread constraints for better resilience
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: contoso-air
      containers:
        - name: contoso-air
          image: contosoair:latest  # This will be updated by the CI/CD pipeline
          ports:
            - containerPort: 3000
              name: http
          # Environment variables from ConfigMap
          envFrom:
            - configMapRef:
                name: contoso-air-config
          # Resource limits and requests
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          # Security context - drop all capabilities and run as non-root
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false  # Set to true if app doesn't need to write to filesystem
            capabilities:
              drop:
                - ALL
          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30  # Give app time to start up